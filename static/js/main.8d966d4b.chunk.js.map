{"version":3,"sources":["03_DeleteWithoutRedux/Form.js","03_DeleteWithoutRedux/Posts.js","03_DeleteWithoutRedux/App.js","index.js"],"names":["Form","postData","newPostData","setPostData","setNewPostData","currentId","setCurrentId","handleSubmit","editPost","className","autoComplete","noValidate","onSubmit","e","preventDefault","type","placeholder","find","post","_id","title","value","onChange","target","message","multiple","onDone","base64","selectedFile","onClick","Post","deletePost","src","height","width","alt","moment","createdAt","fromNow","Posts","length","map","App","useState","apiUrl","useEffect","fetch","then","res","json","data","catch","err","console","error","a","method","headers","body","JSON","stringify","log","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d966d4b.chunk.js","sourcesContent":["import FileBase from 'react-file-base64';\r\n\r\nconst Form = ({ postData, setPostData, newPostData, setNewPostData, currentId, setCurrentId, handleSubmit, editPost }) => {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    currentId ?\r\n      editPost(currentId) :\r\n      handleSubmit();\r\n  }\r\n\r\n  return (\r\n    <div className='add-form'>\r\n      <form autoComplete='off' noValidate onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            placeholder={currentId ? postData.find(post => post._id === currentId).title : 'Input Title...'}\r\n            value={newPostData.title}\r\n            onChange={(e) => setNewPostData({ ...newPostData, title: e.target.value })}\r\n          />\r\n          <label>Message</label>\r\n          <input\r\n            type='text'\r\n            placeholder={currentId ? postData.find(post => post._id === currentId).message : 'Input Message...'}\r\n            value={newPostData.message}\r\n            onChange={(e) => setNewPostData({ ...newPostData, message: e.target.value })}\r\n          />\r\n          <div>\r\n            <FileBase\r\n              type='file'\r\n              multiple={false}\r\n              onDone={({base64}) => setNewPostData({ ...newPostData, selectedFile: base64 })}\r\n            />\r\n          </div>\r\n          <input type='submit' />\r\n        </div>\r\n      </form>\r\n      <div>\r\n        {\r\n          currentId ? (\r\n            <button onClick={e => setCurrentId(null)}>\r\n              Cancel Editing\r\n            </button>\r\n          ) : <p></p>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n","import moment from 'moment';\r\n\r\nconst Post = ({ post, setCurrentId, deletePost }) => {\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {post.title} | {' '}\r\n        <button onClick={e => setCurrentId(post._id)}>Edit</button>\r\n        <button onClick={e => deletePost(post._id)}>\r\n          Delete\r\n        </button>\r\n      </h2>\r\n      <img\r\n        src={post.selectedFile}\r\n        height='150' width='auto'\r\n        alt='This is just title and description'\r\n      />\r\n      <h3>{post.message}</h3>\r\n      <p>Created at {moment(post.createdAt).fromNow()}</p>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Posts = ({ postData, setCurrentId, deletePost }) => {\r\n  return (\r\n    !postData.length ?\r\n      <h3>There is no post</h3> :\r\n      (\r\n        <div>\r\n          { postData.map(post => (\r\n            <Post key={post._id} post={post} setCurrentId={setCurrentId} deletePost={deletePost} />\r\n          ))}\r\n        </div>\r\n      )\r\n  )\r\n}\r\n\r\nexport default Posts;\r\n","import { useEffect, useState } from 'react';\r\nimport Form from './Form';\r\nimport Posts from './Posts';\r\n\r\nconst App = () => {\r\n  const [postData, setPostData] = useState([]);\r\n  const [newPostData, setNewPostData] = useState({\r\n    title: '', message: '', selectedFile: ''\r\n  });\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const apiUrl = 'https://bagusgallery.herokuapp.com/posts';\r\n\r\n  // GET DATA\r\n  const getPosts = () => {\r\n    fetch(apiUrl)\r\n      .then(res => res.json())\r\n      .then(data => setPostData(data))\r\n      .catch(err => console.error('The error is', err));\r\n  }\r\n  useEffect(() => {\r\n    getPosts()\r\n  }, [])\r\n\r\n  // CREATE DATA\r\n  const handleSubmit = async () => {\r\n    const data = await fetch(apiUrl, {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: newPostData.title,\r\n        message: newPostData.message,\r\n        selectedFile: newPostData.selectedFile\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(console.log(`Added ${newPostData}`)); // This is optional\r\n    setPostData([...postData, data])\r\n    setNewPostData({...newPostData, title: '', message: '', selectedFile: ''})\r\n  };\r\n\r\n  // EDIT DATA\r\n  const editPost = async (currentId) => {\r\n    const data = await fetch(`${apiUrl}/${currentId}`, {\r\n      method: 'PATCH',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: newPostData.title ? newPostData.title : postData.find(post => post._id === currentId).title,\r\n        message: newPostData.message ? newPostData.message : postData.find(post => post._id === currentId).message,\r\n        selectedFile: newPostData.selectedFile ? newPostData.selectedFile : postData.find(post => post._id === currentId).selectedFile\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(console.log(`Edited ${newPostData}`)); // This is optional\r\n    setPostData(postData.map(post => post._id === currentId ? data : post))\r\n    setNewPostData({...newPostData, title: '', message: '', selectedFile: ''})\r\n    setCurrentId(null);\r\n  };\r\n\r\n  // DELETE DATA\r\n  const deletePost = async(currentId) => {\r\n    await fetch(`${apiUrl}/${currentId}`, {\r\n      method: 'DELETE',\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(res => res.json())\r\n    setPostData(postData.filter(post => post._id !== currentId))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        postData={postData}\r\n        setPostData={setPostData}\r\n        newPostData={newPostData}\r\n        setNewPostData={setNewPostData}\r\n        currentId={currentId}\r\n        setCurrentId={setCurrentId}\r\n        handleSubmit={handleSubmit}\r\n        editPost={editPost}\r\n      />\r\n      <Posts\r\n        postData={postData}\r\n        setCurrentId={setCurrentId}\r\n        deletePost={deletePost}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// =========== WITHOUT REDUX ========================\r\n// import App from './01_GetAndPostWithoutRedux/App';\r\n// import App from './02_EditWithoutRedux/App';\r\nimport App from './03_DeleteWithoutRedux/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// // =========== WITH REDUX ========================\r\n// import { Provider } from 'react-redux';\r\n// import { createStore, applyMiddleware, compose } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import App from './01_GetAndPostWithRedux/App';\r\n// import './index.css';\r\n//\r\n// // REDUCERS =====================\r\n// import reducers from './01_GetAndPostWithRedux/reducers';\r\n//\r\n// // STORE =======================\r\n// const myStore = createStore(reducers, compose(applyMiddleware(thunk)));\r\n//\r\n// ReactDOM.render(\r\n//   <Provider store={ myStore }>\r\n//     <App />\r\n//   </Provider>,\r\n//   document.getElementById('root')\r\n// );\r\n"],"sourceRoot":""}